// Project Name: Door Report Full
// Project Version: 1.03
// Filename: Door Report ALL.gs
// File Version: 1.12
// Description: A combined file of all .gs scripts for easy testing.

// =======================================================================================
// --- Code from Stage0 - Launcher.gs ---
// =======================================================================================

const CONFIG = {
  sheets: {
    import: "Import",
    helper1: "Output-Helper1",
    helper2: "Output-Helper2",
    report: "AutoReport",
    reportNotes: "AutoReport-Notes",
    data: "Data"
  },
  reportRanges: {
    standard: 7,
    alt: 14
  }
};

function onOpen() {
  VerifySheets();
  SpreadsheetApp.getUi()
      .createMenu('Report Menu')
      .addItem('Run Full Report', 'FullProcess')
      .addItem('Reprocess Last Import', 'ReProcess')
      .addSeparator()
      .addSubMenu(SpreadsheetApp.getUi().createMenu('Manual Steps')
          .addItem('Reprocess Last Import', 'ReProcess')
          .addItem('Run Stage 1', 'Stage1')
          .addItem('Run Stage 2', 'Stage2')
          .addItem('Run Stage 3', 'Stage3'))
      .addSeparator()
      .addSubMenu(SpreadsheetApp.getUi().createMenu('Testing')
          .addItem('Import Standard (7 days)', 'ImportStandard')
          .addItem('Import Alt (14 days)', 'ImportAlt'))
      .addToUi();
}

function VerifySheets() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const allSheetNames = ss.getSheets().map(sheet => sheet.getName());
  const requiredSheetNames = Object.values(CONFIG.sheets);

  requiredSheetNames.forEach(sheetName => {
    if (allSheetNames.indexOf(sheetName) === -1) {
      ss.insertSheet(sheetName);
    }
  });
}

function FullProcess(){
  NewImport();
  Stage1();
  Stage2();
  Stage3();
}

function ReProcess(){
  Stage1();
  Stage2();
  Stage3();
}

function NewImport(){
  ImportStandard();
}

function ImportStandard() {
  ImportReport_Auto(CONFIG.reportRanges.standard);
}

function ImportAlt() {
  ImportReport_Auto(CONFIG.reportRanges.alt);
}

function ReImport(){
  runSecondScript();
}

function Stage1(){
  FMX_Doors_AutoImport_V8();
}

function Stage2(){
  stage2_filterProcessedData();
}

function Stage3(){
  copySelectedDataToAutoReport();
}

// =======================================================================================
// --- Code from Stage0 Import.gs ---
// =======================================================================================

function runSecondScript() {
  showImportDialog();
}

function formatDate(date) {
  var year = date.getFullYear();
  var month = ('0' + (date.getMonth() + 1)).slice(-2);
  var day = ('0' + date.getDate()).slice(-2);
  return year + '-' + month + '-' + day;
}

function ImportReport_Auto(days) {
  var today = new Date();
  var futureDate = new Date();
  futureDate.setDate(today.getDate() + days);

  var fromDate = formatDate(today);
  var toDate = formatDate(futureDate);

  var url = 'https://warrenk12.gofmx.com/scheduling/occurrences?format=csv&useOnlySelectedColumns=False&from=' + fromDate + '&to=' + toDate;

  const htmlScript = `
    <script>
      window.open('${url}', '_blank');
      google.script.run
        .withSuccessHandler(google.script.host.close)
        .runSecondScript();
    </script>
  `;
  const htmlOutput = HtmlService.createHtmlOutput(htmlScript)
    .setWidth(100)
    .setHeight(100);

  SpreadsheetApp.getUi().showModalDialog(htmlOutput, 'Opening Report...');
}

function showImportDialog() {
  const html = HtmlService.createHtmlOutputFromFile('IMPORTdialog')
    .setWidth(400)
    .setHeight(250);
  SpreadsheetApp.getUi().showModalDialog(html, 'Import File from Computer');
}

function importData(fileContent, fileType) {
  const sheetName = 'Import';
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = spreadsheet.getSheetByName(sheetName);

  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }

  sheet.clear();

  let data;
  let delimiter;

  if (fileType === 'text/csv' || fileContent.includes(',')) {
    delimiter = ',';
  } else if (fileType === 'text/tab-separated-values' || fileContent.includes('\t')) {
    delimiter = '\t';
  } else {
    delimiter = ',';
  }

  try {
    data = Utilities.parseCsv(fileContent, delimiter);

    if (data.length === 0) {
      throw new Error('No data found in the file.');
    }

    sheet.getRange(1, 1, data.length, data[0].length).setValues(data);
    for (let i = 1; i <= data[0].length; i++) {
      sheet.autoResizeColumn(i);
    }

    return `Success! ${data.length} rows imported into the "${sheetName}" sheet.`;
  } catch (e) {
    console.error('Error processing file: ' + e.toString());
    return 'Error: Could not parse the file. Please ensure it is a valid CSV or TXT file.';
  }
}

// =======================================================================================
// --- Code from Stage1.gs ---
// =======================================================================================

[Paste the full code of Stage1.gs here, as provided earlier]

// =======================================================================================
// --- Code from Stage2.gs ---
// =======================================================================================

[Paste the full code of Stage2.gs here, as provided earlier]

// =======================================================================================
// --- Code from Stage3.gs ---
// =======================================================================================

[Paste the full code of Stage3.gs here, as provided earlier]